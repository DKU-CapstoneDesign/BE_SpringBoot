name: Build & Deploy to OCI

on:
  push:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build with Gradle
      - name: Build with Gradle
        env:
          DB_NAME: ${{secrets.DB_NAME}}
          DB_USERNAME: ${{secrets.DB_USERNAME}}
          DB_PASSWORD: ${{secrets.DB_PASSWORD}}
          DB_URL: ${{secrets.DB_URL}}
          MINIO_ACCESS_KEY: ${{secrets.MINIO_ACCESS_KEY}}
          MINIO_SECRET_KEY: ${{secrets.MINIO_SECRET_KEY}}
          MINIO_TRUST_STORE: ${{secrets.MINIO_TRUST_STORE}}
          MINIO_TRUST_STORE_PASSWORD: ${{secrets.MINIO_TRUST_STORE_PASSWORD}}
          KEY_STORE: ${{secrets.KEY_STORE}}
          KEY_STORE_PASSWORD: ${{secrets.KEY_STORE_PASSWORD}}
          KEY_ALIAS: ${{secrets.KEY_ALIAS}}
        run: ./gradlew clean build

      # Build with Docker
      # Push to Docker-Hub
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push kore docker image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: dipic/kore-be:latest

  # Deploy to Server
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Setup SSH key - [main]
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to OCI - [main]
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            sudo docker rm -f kore-be
            sudo docker rmi -f dipic/kore-be:latest
            sudo docker-compose up -d
          EOF
